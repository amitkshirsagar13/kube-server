map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
}

server {
   listen         80;
   return 301 https://$host$request_uri;
}

upstream websocket {
        server localhost:9090;
}

server {
   listen       443 ssl http2;
   server_name  cockpit.gcp.k8m.io;
   #return 301 $scheme://$server_name:9090$request_uri;
   location / {
     proxy_pass http://websocket;
                proxy_http_version 1.1;
                proxy_buffering off;
                proxy_set_header X-Real-IP  $remote_addr;
                proxy_set_header Host $host;
                proxy_set_header X-Forwarded-For $remote_addr;

                # needed for websocket
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection $connection_upgrade;
                # change scheme of "Origin" to http
                proxy_set_header Origin http://$host;

                gzip off;
                add_header X-Frame-Options "SAMEORIGIN";
   }
}

server {
   listen       443 ssl http2;
   server_name  kubedash.gcp.k8m.io;
   location / {
     proxy_pass https://10.105.0.231:443/;
     proxy_set_header Host $host;
     proxy_set_header X-Real-IP $remote_addr;
     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
     proxy_set_header X-Forwarded-Proto $scheme;
   }
}

server {
   listen       443 ssl http2;
   server_name  weavedash.dev.gcp.k8m.io;
   location / {
     proxy_pass http://10.110.192.147/;
     proxy_set_header Host $host;
     proxy_set_header X-Real-IP $remote_addr;
     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
     proxy_set_header X-Forwarded-Proto $scheme;
   }
}

server {
   listen       443 ssl http2;
   server_name  api.gcp.k8m.io;
   location / {
     proxy_pass https://localhost:6443/;
     proxy_set_header Host $host;
     proxy_set_header X-Real-IP $remote_addr;
     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
     proxy_set_header X-Forwarded-Proto $scheme;
   }
}

server {
   listen       443 ssl http2 default_server;
   server_name  *.k8m.io;
   root         /usr/share/nginx/html;
   index index.html index.htm;
   ssl_certificate "/etc/pki/nginx/server.crt";
   ssl_certificate_key "/etc/pki/nginx/private/server.key";
   location / {
     proxy_pass https://localhost:30443/;
     proxy_set_header Host $host;
     proxy_set_header X-Real-IP $remote_addr;
     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
     proxy_set_header X-Forwarded-Proto $scheme;
   }
}
