node {
    def myRepo = checkout scm
    def gitCommit = myRepo.GIT_COMMIT
    def gitBranch = myRepo.GIT_BRANCH
    def shortGitCommit = "${gitCommit[0..10]}"
    def mvnTool = tool 'maven3.5.3'
    //def dockerTool = tool name: 'docker', type: 'org.jenkinsci.plugins.docker.commons.tools.DockerTool'
    def project = "basekube"
    def application = "demo-server"
    def dockerApp
    stage('Build Project') {
       echo "Building Project...$gitBranch:$shortGitCommit"

       // execute maven
       sh "${mvnTool}/bin/mvn -Dmaven.test.skip=true jar:jar"
       
    }
    stage('DockerImage') {
        
        echo "Building Docker Image..."
        withDockerServer([uri: "tcp://jekins:2376"]) {
           withDockerRegistry([credentialsId: 'docker-hub-credentials', url: "https://registry.hub.docker.com/"]) {
              // we give the image the same version as the .war package
              def image = docker.build("$project/$application:$shortGitCommit", "--build-arg PACKAGE_VERSION=${gitBranch} .")
              image.push()
           }   
        }
        
        withEnv(["DOCKER=${dockerTool}/bin"]) {
            //stages
            //now we can simply call: dockerCmd 'run mycontainer'
            dockerCmd "build -t $project/$application:$shortGitCommit -t $project/$application:latest ."
        }
        
        //sh "docker build -t $project/$application:$shortGitCommit -t $project/$application:latest ."
        //dockerApp = dockerTool.build("$project/$application")
        def imageRegistry = "docker.com/demo"
        //sh "gcloud container builds submit --tag $imageRegistry/$project:$shortGitCommit"
    }
    stage('Push image') {
        /* Finally, we'll push the image with two tags:
         * First, the incremental build number from Jenkins
         * Second, the 'latest' tag.
         * Pushing multiple tags is cheap, as all the layers are reused. */
        //docker.withRegistry('https://registry.hub.docker.com', 'docker-hub-credentials') {
        //   dockerApp.push("$shortGitCommit")
        //    dockerApp.push("latest")
        //}
    }
    stage('Deploy application') {
       echo "Deploying application...."
       def namespace = "$gitBranch"
       //sh "helm upgrade --install --namespace --set commit=$shortGitCommit $namespace cicd/deploy"
    }
}

def dockerCmd(args) {
    //sh "${DOCKER}/docker ${args}"
}
