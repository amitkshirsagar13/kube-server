---
kind: PersistentVolume
apiVersion: v1
metadata:
  name: mongo-{{.Values.branch}}-persistent-storage
  namespace: {{.Values.branch}}
  labels:
    type: local
spec:
  storageClassName: manual
  capacity:
    storage: 3Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/data/data01"
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: mongo-{{.Values.branch}}-persistent-storage-claim
  namespace: {{.Values.branch}}
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 3Gi
---
apiVersion: v1
kind: ReplicationController
metadata:
  labels:
    name: mongo
  name: mongo-controller
spec:
  replicas: 1
  template:
    metadata:
      labels:
        name: mongo
    spec:
      hostAliases:
       - ip: 127.0.0.1
         hostnames:
         - {{.Values.application}}
         - "{{.Values.application}}.{{.Values.branch}}.shinigami.io"
      containers:
      - image: mongo
        name: mongo
        ports:
        - name: mongo
          containerPort: 27017
          hostPort: 27017
        volumeMounts:
          - name: mongo-{{.Values.branch}}-persistent-storage
            mountPath: /data/db
      volumes:
        - name: mongo-{{.Values.branch}}-persistent-storage
          persistentVolumeClaim:
            claimName: mongo-{{.Values.branch}}-persistent-storage-claim
---
apiVersion: v1
kind: Service
metadata:
  labels:
    name: mongo
  name: mongo
  namespace: {{.Values.branch}}
spec:
  type: NodePort
  ports:
    - port: 27017
      nodePort: 32017
  selector:
    name: mongo
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/tls-acme: "true"
  name: mongo
  namespace: {{.Values.branch}}
  labels:
    version: mongo
spec:
  tls:
  - hosts:
    - "mongo.{{.Values.branch}}.shinigami.io"
  - secretName: {{.Values.branch}}
  backend:
    serviceName: default-http-backend
    servicePort: 80
  rules:
    - host: "mongo.{{.Values.branch}}.shinigami.io"
      http:
        paths:
          - backend:
              serviceName: mongo
              servicePort: 27017
            path: /
    
